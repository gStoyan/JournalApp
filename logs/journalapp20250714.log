2025-07-14 15:18:20.228 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-14 15:18:20.573 +03:00 [DBG] Entity Framework Core 9.0.7 initialized 'JournalAppDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.7' with options: None
2025-07-14 15:18:20.593 +03:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .FirstOrDefault(u => u.UserName == __userName_0)'
2025-07-14 15:18:20.746 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Password (string) Required, 1], [Property: User.UserName (string) Required, 2] }
        SELECT TOP(1) u.Id, u.Password, u.UserName
        FROM Users AS u
        WHERE u.UserName == @__userName_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Password (string) Required, 1], [Property: User.UserName (string) Required, 2] }
        SELECT TOP(1) u.Id, u.Password, u.UserName
        FROM Users AS u
        WHERE u.UserName == @__userName_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("JournalApp.Domain.User.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("JournalApp.Domain.User.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("JournalApp.Domain.User.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Password>k__BackingField = dataReader.GetString(1);
                                instance.<UserName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("JournalApp.Domain.User.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: JournalApp.Infrastructure.JournalAppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-07-14 15:18:20.764 +03:00 [DBG] Creating DbConnection.
2025-07-14 15:18:20.772 +03:00 [DBG] Created DbConnection. (6ms).
2025-07-14 15:18:20.775 +03:00 [DBG] Opening connection to database 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db'.
2025-07-14 15:18:20.785 +03:00 [DBG] Opened connection to database 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db'.
2025-07-14 15:18:20.790 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-14 15:18:20.793 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-14 15:18:20.795 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-07-14 15:18:20.799 +03:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 3)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Password", "u"."UserName"
FROM "Users" AS "u"
WHERE "u"."UserName" = @__userName_0
LIMIT 1
2025-07-14 15:18:20.816 +03:00 [INF] Executed DbCommand (14ms) [Parameters=[@__userName_0='?' (Size = 3)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Password", "u"."UserName"
FROM "Users" AS "u"
WHERE "u"."UserName" = @__userName_0
LIMIT 1
2025-07-14 15:18:20.835 +03:00 [DBG] Context 'JournalAppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-14 15:18:20.843 +03:00 [DBG] Closing data reader to 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db'.
2025-07-14 15:18:20.846 +03:00 [DBG] A data reader for 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db' is being disposed after spending 26ms reading results.
2025-07-14 15:18:20.848 +03:00 [DBG] Closing connection to database 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db'.
2025-07-14 15:18:20.849 +03:00 [DBG] Closed connection to database 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db' (1ms).
2025-07-14 15:24:29.138 +03:00 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-07-14 15:24:29.489 +03:00 [DBG] Entity Framework Core 9.0.7 initialized 'JournalAppDbContext' using provider 'Microsoft.EntityFrameworkCore.Sqlite:9.0.7' with options: None
2025-07-14 15:24:29.508 +03:00 [DBG] Compiling query expression: 
'DbSet<User>()
    .FirstOrDefault(u => u.UserName == __userName_0)'
2025-07-14 15:24:29.651 +03:00 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<User>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Password (string) Required, 1], [Property: User.UserName (string) Required, 2] }
        SELECT TOP(1) u.Id, u.Password, u.UserName
        FROM Users AS u
        WHERE u.UserName == @__userName_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: User.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: User.Password (string) Required, 1], [Property: User.UserName (string) Required, 2] }
        SELECT TOP(1) u.Id, u.Password, u.UserName
        FROM Users AS u
        WHERE u.UserName == @__userName_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        User entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            User instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(User);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: User.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("JournalApp.Domain.User.User").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (User)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("JournalApp.Domain.User.User")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("JournalApp.Domain.User.User")]: 
                        {
                            return 
                            {
                                User instance;
                                instance = new User();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Password>k__BackingField = dataReader.GetString(1);
                                instance.<UserName>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: User | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("JournalApp.Domain.User.User")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(User)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: JournalApp.Infrastructure.JournalAppDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .SingleOrDefault()'
2025-07-14 15:24:29.668 +03:00 [DBG] Creating DbConnection.
2025-07-14 15:24:29.675 +03:00 [DBG] Created DbConnection. (5ms).
2025-07-14 15:24:29.678 +03:00 [DBG] Opening connection to database 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db'.
2025-07-14 15:24:29.687 +03:00 [DBG] Opened connection to database 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db'.
2025-07-14 15:24:29.691 +03:00 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-07-14 15:24:29.694 +03:00 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-07-14 15:24:29.696 +03:00 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-07-14 15:24:29.700 +03:00 [DBG] Executing DbCommand [Parameters=[@__userName_0='?' (Size = 3)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Password", "u"."UserName"
FROM "Users" AS "u"
WHERE "u"."UserName" = @__userName_0
LIMIT 1
2025-07-14 15:24:29.715 +03:00 [INF] Executed DbCommand (12ms) [Parameters=[@__userName_0='?' (Size = 3)], CommandType='"Text"', CommandTimeout='30']
SELECT "u"."Id", "u"."Password", "u"."UserName"
FROM "Users" AS "u"
WHERE "u"."UserName" = @__userName_0
LIMIT 1
2025-07-14 15:24:29.734 +03:00 [DBG] Context 'JournalAppDbContext' started tracking 'User' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-07-14 15:24:29.742 +03:00 [DBG] Closing data reader to 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db'.
2025-07-14 15:24:29.745 +03:00 [DBG] A data reader for 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db' is being disposed after spending 26ms reading results.
2025-07-14 15:24:29.746 +03:00 [DBG] Closing connection to database 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db'.
2025-07-14 15:24:29.748 +03:00 [DBG] Closed connection to database 'main' on server '/Users/sgrancharov/dev/dotnet/JournalApp/JournalApp/JournalApp.Infrastructure/JournalApp.db' (1ms).
